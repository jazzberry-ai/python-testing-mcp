# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

import typing
import typing_extensions
from pydantic import BaseModel, ConfigDict

import baml_py

from . import types

StreamStateValueT = typing.TypeVar('StreamStateValueT')
class StreamState(BaseModel, typing.Generic[StreamStateValueT]):
    value: StreamStateValueT
    state: typing_extensions.Literal["Pending", "Incomplete", "Complete"]
# #########################################################################
# Generated classes (3)
# #########################################################################

class FuzzInput(BaseModel):
    value: typing.Optional[str] = None

class PythonTestFile(BaseModel):
    imports: typing.List[str]
    test_cases: typing.List["TestCase"]

class TestCase(BaseModel):
    name: typing.Optional[str] = None
    body: typing.Optional[str] = None

# #########################################################################
# Generated type aliases (0)
# #########################################################################
